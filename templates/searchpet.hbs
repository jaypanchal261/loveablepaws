<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Adopt Pet</title>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.3.0/flowbite.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/wow/1.1.2/wow.min.js"
        integrity="sha512-Eak/29OTpb36LLo2r47IpVzPBLXnAMPAVypbSZiZ4Qkf8p/7S/XRG5xp7OKWPPYfJT6metI+IORkR5G8F900+g=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    <script src="https://kit.fontawesome.com/ad5f4c0450.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="css/output.css" />
    <style>
        #loginBtn::before {
            content: "Log in/ Sign up";
        }

        @media (max-width: 500px) {
            #loginBtn::before {
                content: "Login";
            }
        }
    </style>
</head>

<body class="bg-[#fbf8f7]">

    <nav class="bg-[#fbdbc3] fixed w-full z-40 top-0 start-0 border-b border-gray-200">
        <div class=" flex flex-wrap items-center justify-between p-2 md:p-3 ">
            <a href="/" class="flex items-center space-x-1 rtl:space-x-reverse">
                <img src="assets/logo.png" class="h-8 md:h-8 lg:h-11" alt=" Logo" />
                <span
                    class="self-center text-xl md:text-xl lg:text-2xl text-[#3f3f40] font-bold whitespace-nowrap">Loveable
                    Paws</span>
            </a>
            <div class="flex md:order-2 space-x-3 md:space-x-0 rtl:space-x-reverse">
                {{!-- button --}}
                <a href="/login" id="loginBtn"
                    class="inline-flex items-center text-white bg-[#3f3f40] hover:bg-[#2a2a2b] focus:ring-4 focus:outline-none focus:ring-[#5a5a5c] font-semibold rounded-lg text-sm px-4 py-2 text-center hidden">

                </a>

                {{!-- icon --}}
                <a id="userIcon" href="/userprofile"
                    class="relative inline-flex items-center justify-center w-10 h-10 overflow-hidden rounded-full hidden"
                    style="background-color: #3f3f40;">
                    <span class="font-medium text-[#fbf8f7]" id="flName">JL</span>
                </a>

                <button data-collapse-toggle="navbar-sticky" type="button"
                    class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 "
                    aria-controls="navbar-sticky" aria-expanded="false">
                    <span class="sr-only">Open main menu</span>
                    <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                        viewBox="0 0 17 14">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M1 1h15M1 7h15M1 13h15" />
                    </svg>
                </button>
            </div>
            <div class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1" id="navbar-sticky">
                <ul
                    class="flex flex-col p-4 md:p-0 mt-4 font-medium border border-gray-100 rounded-lg bg-[#fbdbc3] md:space-x-4 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 md:bg-[#fbdbc3] lg:space-x-8 ">
                    <li>
                        <a href="/"
                            class="block py-2 px-3 text-[#3f3f40] rounded hover:bg-[#f5be94] md:hover:bg-transparent md:hover:text-[#fd634f] md:p-0  font-bold"
                            aria-current="page">Home</a>
                    </li>
                    <li>
                        <a href="/listpet"
                            class="block py-2 px-3 text-[#3f3f40] rounded hover:bg-[#f5be94] md:hover:bg-transparent md:hover:text-[#fd634f] md:p-0  font-bold">List
                            Pet</a>
                    </li>
                    <li>
                        <a href="/adoptpet"
                            class="block py-2 px-3 rounded md:bg-transparent text-[#fd634f] md:p-0 font-bold">Adopt
                            Pet
                        </a>
                    </li>

                    <li>
                        <button id="dropdownNavbarLink" data-dropdown-toggle="dropdownNavbar"
                            class="flex items-center justify-between w-full py-2 px-3 text-[#3f3f40] rounded hover:bg-[#f5be94] md:hover:bg-transparent md:border-0 md:hover:text-[#fd634f] md:p-0 md:w-auto font-bold">
                            Services
                            <svg class="w-2.5 h-2.5 ms-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                                fill="none" viewBox="0 0 10 6">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                                    stroke-width="2" d="m1 1 4 4 4-4" />
                            </svg>
                        </button>

                        <div id="dropdownNavbar"
                            class="z-40 hidden font-normal bg-[#fbdbc3] divide-y divide-[#ffd5b5] rounded-lg shadow-lg w-44 ">
                            <ul class="py-2 text-sm text-gray-700 " aria-labelledby="dropdownLargeButton">
                                <li>
                                    <a href="/lostandfound" class="block px-4 py-2 hover:bg-[#f5be94]">Lost
                                        and Found Pet</a>
                                </li>
                                <li>
                                    <a href="/donation" class="block px-4 py-2 hover:bg-[#f5be94]">Donation</a>
                                </li>
                                <li>
                                    <a href="/petcareresources" class="block px-4 py-2 hover:bg-[#f5be94]">Pet
                                        Care Resources</a>
                                </li>
                                <li>
                                    <a href="/veterinary" class="block px-4 py-2 hover:bg-[#f5be94]">Veterinary</a>
                                </li>
                                <li>
                                    <a href="/welfare" class="block px-4 py-2 hover:bg-[#f5be94]">Welfare</a>
                                </li>
                            </ul>
                        </div>
                    </li>
                    <li>
                        <a href="/aboutus"
                            class="block py-2 px-3 text-[#3f3f40] rounded hover:bg-[#f5be94] md:hover:bg-transparent md:hover:text-[#fd634f] md:p-0 font-bold">About
                            Us</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="bg-[#bbcbca] mt-[3.6rem] md:mt-14 w-full flex justify-center lg:pt-5">
        <div class="flex flex-col my-8 md:my-12 mx-5 opacity-100 wow animate__animated animate__zoomIn">
            <h2 class="text-2xl md:text-3xl text-[#3f3f40] font-extrabold text-center">
                "When you adopt a pet, you're not just saving them, </h2>
            <h2 class="text-2xl md:text-3xl text-[#3f3f40] font-extrabold text-center pt-1 md:pt-3">
                they're also saving you with their unconditional love."</h2>
        </div>
    </div>

    <div class="w-full flex flex-col pb-10 md:flex md:flex-row">
        <div class="md:w-1/4 lg:w-1/5 pt-7 mx-16 sm:mx-32 md:mx-10">
            <h2
                class="text-[#3f3f40] font-bold text-center text-xl lg:text-2xl pb-3 wow animate__animated animate__zoomIn">
                Apply Filters
            </h2>
            <form id="filterForm" action="/api/v1/pets/filterpet" method="get">

                <label for="default" class="block mb-2 text-sm font-medium text-gray-900">Pet Type</label>
                <select id="petType" name="petType"
                    class="bg-[#fbf8f7] border border-gray-300 text-[#3f3f40] text-sm rounded-lg focus:ring-[#555151] focus:border-[#555151] block w-full p-2.5 mb-6">
                    <option value="">Choose a Pet Type</option>
                    <option value="dog">Dog</option>
                    <option value="cat">Cat</option>
                </select>

                <label for="default" class="block mb-2 text-sm font-medium text-gray-900">Gender</label>
                <select id="gender" name="gender"
                    class="bg-[#fbf8f7] border border-gray-300 text-[#3f3f40] text-sm rounded-lg focus:ring-[#555151] focus:border-[#555151] block w-full p-2.5 mb-6">
                    <option value="">Choose a Pet Gender</option>
                    <option value="male">Male</option>
                    <option value="female">Female</option>
                </select>

                <label for="default" class="block mb-2 text-sm font-medium text-gray-900">Age of Pet</label>
                <select id="age" name="age"
                    class="bg-[#fbf8f7] border border-gray-300 text-[#3f3f40] text-sm rounded-lg focus:ring-[#555151] focus:border-[#555151] block w-full p-2.5 mb-6">
                    <option value="">Choose an Age of Pet</option>
                    <option value="younghood">Younghood</option>
                    <option value="adolescence">Adolescence</option>
                    <option value="adulthood">Adulthood</option>
                    <option value="senior">Senior</option>
                </select>

                <label for="default" class="block mb-2 text-sm font-medium text-gray-900">Search by State</label>
                <select id="state" name="state"
                    class="bg-[#fbf8f7] border border-gray-300 text-[#3f3f40] text-sm rounded-lg focus:ring-[#555151] focus:border-[#555151] block w-full p-2.5 mb-6">
                    <option value="">Select a State</option>
                    <option value="gujarat">Gujarat</option>
                    <option value="maharashtra">Maharashtra</option>
                    <option value="rajasthan">Rajasthan</option>
                    <option value="madhyapradesh">Madhya Pradesh</option>
                </select>

                <label for="default" class="block mb-2 text-sm font-medium text-gray-900">Search by City</label>
                <select id="city" name="city"
                    class="bg-[#fbf8f7] border border-gray-300 text-[#3f3f40] text-sm rounded-lg focus:ring-[#555151] focus:border-[#555151] block w-full p-2.5 mb-6">
                    <option value="">Choose a City</option>
                    {{!-- <option value="ahmedabad">Ahmedabad</option>
                    <option value="surat">Surat</option>
                    <option value="vadodara">Vadodara</option>
                    <option value="gandhinagar">Gandhinagar</option> --}}
                </select>
                <div class="flex justify-center space-x-4 mt-5">
                    <input type="submit" value="Apply"
                        class="text-white bg-[#3f3f40] hover:bg-[#2a2a2b] focus:ring-4 focus:outline-none focus:ring-[#5a5a5c] font-semibold rounded-lg text-sm px-2 py-1 md:px-2 md:py-1 lg:px-4 lg:py-2 justify-center wow animate__animated animate__pulse" />

                    <button onclick="clearForm()"
                        class="text-[#3f3f40] bg-[#fbf8f7] hover:bg-[#3f3f40] border border-[#3f3f40] hover:text-[#fbf8f7] focus:ring-2 focus:outline-none focus:ring-[#5a5a5c] font-semibold rounded-lg text-sm px-2 py-1 md:px-2 md:py-1 lg:px-4 lg:py-2 justify-center wow animate__animated animate__pulse">Clear</button>
                </div>
            </form>
        </div>

        <div class="md:w-3/4 lg:w-4/5 pt-7 mx-3">
            <form id="searchForm" class="flex justify-center max-w-lg mx-auto" action="/api/v1/pets/searchpet"
                method="get">
                <label for="voice-search" class="sr-only">Search</label>
                <div class="relative w-full">
                    <input type="text" id="searchKey" name="searchKey"
                        class="bg-[#fbf8f7] border border-gray-300 text-[#3f3f40] text-sm rounded-lg focus:ring-[#555151] focus:border-[#555151] block w-full p-2.5"
                        placeholder="Search..." required />
                </div>
                <button type="submit"
                    class="inline-flex items-center py-2.5 px-3 ms-2 text-sm font-medium text-white bg-[#3f3f40] rounded-lg hover:bg-[#2a2a2b] focus:ring-4 focus:outline-none focus:ring-[#5a5a5c]">
                    <svg class="w-4 h-4 me-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                        viewBox="0 0 20 20">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z" />
                    </svg>Search
                </button>
            </form>

            <div id="errorContainer" class="hidden justify-center items-center mb-10">
                <div class="flex flex-col justify-center items-center my-8">
                    <!-- Default Msg -->
                    <img src="assets/errSearch.png" alt="" class="h-80">
                    <h4 class="text-xl md:text-2xl font-bold text-center wow animate__animated animate__zoomIn"
                        style="color: #d48053;">
                        🐾Oh no! No matches found Adjust your <br> search and take another look!</h4>
                </div>
            </div>

            <!-- Card Section -->
            <div class="flex justify-center mt-8">
                <!-- Cards grid -->
                <div id="cardContainer" class="grid grid-cols-1 sm:grid-cols-2 xl:grid-cols-3 gap-8 lg:gap-12">
                    
                </div>
            </div>

            <div class="flex justify-center pt-10">
                <div class="flex">
                    <!-- Previous Button -->
                    <a href="#" id="prevBtn"
                        class="flex items-center justify-center px-4 h-10 me-3 text-base font-medium text-white bg-[#3f3f40] border border-[#5a5a5c] rounded-lg hover:bg-[#2a2a2b] hover:text-white">
                        <svg class="w-3.5 h-3.5 me-2 rtl:rotate-180" aria-hidden="true"
                            xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M13 5H1m0 0 4 4M1 5l4-4" />
                        </svg>
                        Previous
                    </a>
                    <a href="#" id="nextBtn"
                        class="flex items-center justify-center px-4 h-10 text-base font-medium text-white bg-[#3f3f40] border border-[#5a5a5c] rounded-lg hover:bg-[#2a2a2b] hover:text-white">
                        Next
                        <svg class="w-3.5 h-3.5 ms-2 rtl:rotate-180" aria-hidden="true"
                            xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M1 5h12m0 0L9 1m4 4L9 9" />
                        </svg>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <footer class="bg-[#bbcbca] shadow">
        <div class="w-full max-w-screen-xl mx-auto p-4 md:py-8">
            <div class="sm:flex sm:items-center sm:justify-between">
                <a href="/" class="flex items-center space-x-1 rtl:space-x-reverse">
                    <img src="assets/logo.png" class="h-8 md:h-8 lg:h-11" alt="Logo" />
                    <span
                        class="self-center  text-xl md:text-xl lg:text-2xl  text-[#3f3f40] font-bold whitespace-nowrap">Loveable
                        Paws</span>
                </a>
                <ul class="flex flex-wrap items-center mb-6 text-sm font-medium text-[#3f3f40] sm:mb-0 ">
                    <li>
                        <a href="/aboutus" class="hover:underline me-4 md:me-6">About</a>
                    </li>
                    <li>
                        <a href="/privacypolicy" class="hover:underline me-4 md:me-6">Privacy Policy</a>
                    </li>
                    <li>
                        <a href="/termsandcond" class="hover:underline me-4 md:me-6">Terms & Conditions</a>
                    </li>
                    <li>
                        <a href="/aboutus" class="hover:underline">Contact</a>
                    </li>
                </ul>
            </div>
            <hr class="my-6 border-gray-200 sm:mx-auto lg:my-8" />
            <div class="sm:flex sm:items-center sm:justify-between">
                <span class="text-sm text-[#5e5e60] sm:text-center">© 2024 <a href="/"
                        class="hover:underline">Loveable Paws™</a>. All Rights Reserved.
                </span>
                <div class="flex mt-4 sm:justify-center sm:mt-0 space-x-7">
                    <a href="#" class="text-gray-500 hover:text-gray-900">
                        <i class="fa-brands fa-facebook-f"></i>
                        <span class="sr-only">Facebook page</span>
                    </a>
                    <a href="#" class="text-gray-500 hover:text-gray-900">
                        <i class="fa-brands fa-instagram"></i>
                        <span class="sr-only">Instagram page</span>
                    </a>
                    <a href="mailto:loveablepaws2407@gmail.com" class="text-gray-500 hover:text-gray-900">
                        <i class="fa-regular fa-envelope"></i>
                        <span class="sr-only">Mail</span>
                    </a>
                </div>
            </div>
    </footer>

    <script>
        new WOW().init();

        let cardContainer = document.getElementById("cardContainer");

        let hasNextPageData = true; // Flag to check if the next page has data

        let errorContainer = document.getElementById('errorContainer');

        let currentPage = 1; // Initialize current page number

        function getQueryParameter(parameterName) {
            const urlParams = new URLSearchParams(window.location.search);
            return urlParams.get(parameterName);
        }

        // Extract userId and username from the URL
        var searchKey = getQueryParameter('searchKey');

        function printPets(data1) {
            cardContainer.innerHTML = "";
            for (i = 0; i < data1['data'].length; i++) {

                //let data = "<div class='card' style='width: 18rem;'><div class='card-body'><p class='card-text'>" + (i + 1) + ". " + items[i].value + "</p><button  onclick='deletetd(" + i + ")' class='btn btn-danger'>delete</button> </div></div>";

                let data = `<div
                        class="max-w-72  bg-[#dbe7e7] border border-gray-200 rounded-lg shadow-md wow animate__animated animate__pulse animate__delay-1s">
                        <img class="rounded-t-lg  w-[318px] h-[256px]" src="${data1['data'][i]['petImage']}" alt="" />
                        <div class="p-4 sm:p-5">
                            <div class="mb-1 md:space-x-0">
                                <span class="font-bold text-[#3f3f40] text-lg">${capitalizeFirstLetter(data1['data'][i]['petName'])} (${capitalizeFirstLetter(data1['data'][i]['gender'])})</span>
                            </div>
                            <div class="mb-1">
                                <span class="font-semibold text-[#3f3f40] text-base">Breed:</span>
                                <span class="font-normal text-[#3f3f40] text-base">${capitalizeFirstLetter(data1['data'][i]['breed'])}</span></div>
                            <div class="mb-1">
                                <span class="font-semibold text-[#3f3f40] text-base">Age:</span>
                                <span class="font-normal text-[#3f3f40] text-base">${capitalizeFirstLetter(data1['data'][i]['age'])}</span>
                            </div>
                            <div class="mb-1">
                                <span class="font-semibold text-[#3f3f40] text-base">Address:</span>
                                <span class="font-normal text-[#3f3f40] text-base">${capitalizeFirstLetter(data1['data'][i]['owner'][0]['city'])}, ${capitalizeFirstLetter(data1['data'][i]['owner'][0]['state'])}</span>
                            </div>
                            <hr class="h-px my-1 bg-gray-400 border-0">
                            <div class="mb-1">
                                <span class="font-semibold text-[#3f3f40] text-lg">Owner Details-</span>
                            </div>
                            <div class="mb-0">
                                <span class="font-semibold text-[#3f3f40] text-base">Name:</span>
                                <span class="font-normal text-[#3f3f40] text-base">${capitalizeFirstLetter(data1['data'][i]['owner'][0]['firstName'])} ${capitalizeFirstLetter(data1['data'][i]['owner'][0]['lastName'])}</span>
                            </div>
                            <div class="mb-3">
                                <span class="font-semibold text-[#3f3f40] text-base">Number:</span>
                                <span class="font-normal text-[#3f3f40] text-base">${data1['data'][i]['owner'][0]['phoneNo']}</span>
                            </div>

                            <div class="text-center">
                                <a href="/petprofile?petId=${data1['data'][i]['_id']}"
                                    class="inline-flex font-bold items-center text-[#3f3f40] hover:underline whitespace-nowrap">
                                    View more details
                                    <svg class="w-3 h-3 ms-2.5 rtl:rotate-[270deg]" aria-hidden="true"
                                        xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 18">
                                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M15 11v4.833A1.166 1.166 0 0 1 13.833 17H2.167A1.167 1.167 0 0 1 1 15.833V4.167A1.166 1.166 0 0 1 2.167 3h4.618m4.447-2H17v5.768M9.111 8.889l7.778-7.778" />
                                    </svg>
                                </a>
                            </div>
                        </div>
                    </div>`

                cardContainer.innerHTML = cardContainer.innerHTML + data;

                // +(i+1)+". "+items[i].value+
            }
        }


        // Function to fetch pets based on page number
        function fetchPets(searchKey, pageNo) {

            let pr = fetch(`/api/v1/pets/searchpet/?searchKey=${searchKey}&pageNo=${pageNo}`);

            pr.then((Response) => {
                return Response.json();
            }).then((data1) => {
                console.log(data1);

                if (data1.data.length === 0) {

                    errorContainer.classList.remove('hidden');
                    errorContainer.classList.add('flex', 'flex-col', 'flex-wrap');
                    cardContainer.innerHTML = "";
                    hasNextPageData = false; // No data for the next page
                }
                else {

                    errorContainer.classList.remove('flex', 'flex-col', 'flex-wrap');
                    errorContainer.classList.add('hidden');

                    hasNextPageData = true; // Data fetched successfully
                }
                printPets(data1);
            })
        }

        // Function to handle next page navigation
        function nextPage() {
            if (hasNextPageData) {
                currentPage++;
                fetchPets(searchKey, currentPage);
            }
        }

        // Function to handle previous page navigation
        function previousPage() {
            if (currentPage > 1) {
                currentPage--;
                fetchPets(searchKey, currentPage);
            }
        }

        // Add event listeners to next and previous page links
        document.getElementById('nextBtn').addEventListener('click', nextPage);
        document.getElementById('prevBtn').addEventListener('click', previousPage);

        // Fetch pets for initial page load
        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('searchKey').value = searchKey;

            fetchPets(searchKey, currentPage); // Fetch pets for the first page initially
        });
        document.getElementById('searchForm').addEventListener('submit', async function (event) {
            event.preventDefault(); // Prevent the default form submission behavior

            searchKey = document.getElementById('searchKey').value;

            console.log(searchKey);
            fetchPets(searchKey, 1);

        });

        document.getElementById('filterForm').addEventListener('submit', async function (event) {
            event.preventDefault(); // Prevent the default form submission behavior

            const petType = document.getElementById('petType').value;
            const gender = document.getElementById('gender').value;
            const state = document.getElementById('state').value;
            const age = document.getElementById('age').value;
            const city = document.getElementById('city').value;
            console.log(petType, gender, state, age, city);
            //filterPets(petType, gender, age, city, state, 1);

            // Construct the URL with query parameters
            var url = "/filterpet?";
            url += "petType=" + encodeURIComponent(petType) + "&";
            url += "gender=" + encodeURIComponent(gender) + "&";
            url += "age=" + encodeURIComponent(age) + "&";
            url += "state=" + encodeURIComponent(state) + "&";
            url += "city=" + encodeURIComponent(city);

            // Remove trailing '&' if present
            if (url.endsWith("&")) {
                url = url.slice(0, -1);
            }

            // Redirect the user to the constructed URL
            window.location.href = url;

        });

        function clearForm() {
            document.getElementById('petType').value = '';
            document.getElementById('gender').value = '';
            document.getElementById('state').value = '';
            document.getElementById('age').value = '';
            document.getElementById('city').value = '';

        }

        function showProfileBtn(userId, userName) {

            if (userId && userName) {
                // User is logged in
                document.getElementById("loginBtn").classList.add('hidden') // Show the login button

                document.getElementById("userIcon").classList.remove('hidden') // Show the user icon
            } else {
                console.log(userId, userName);
                console.log('User is not logged in')
                // User is not logged in
                document.getElementById("userIcon").classList.add('hidden') // Show the user icon

                document.getElementById("loginBtn").classList.remove('hidden') // Show the login button
            }
        }

        let userPromise = fetch(`/api/v1/users/getuser`);

        userPromise.then((Response) => {
            return Response.json();
        }).then((data1) => {
            console.log(data1);
            let firstName = data1['data']['firstName'];
            let lastName = data1['data']['lastName'];

            let userId = data1['data']['_id'];
            let userName = data1['data']['userName'];

            const result = createString(firstName, lastName);
            document.getElementById("flName").innerHTML = result;

            showProfileBtn(userId, userName);

            //then
            document.getElementById("loginBtn").classList.add('hidden') // Show the login button

            document.getElementById("userIcon").classList.remove('hidden') // Show the user icon


        }).catch((err) => {
            //console.log(userId, userName);
            console.log('User is not logged in')
            // User is not logged in
            //catch
            document.getElementById("userIcon").classList.add('hidden') // Show the user icon

            document.getElementById("loginBtn").classList.remove('hidden') // Show the login button
        })

        function createString(firstName, lastName) {
            // Extracting the first character of the first name (if it exists)
            const firstInitial = firstName.length > 0 ? firstName.charAt(0) : '';
            // Extracting the first character of the last name (if it exists)
            const lastInitial = lastName.length > 0 ? lastName.charAt(0) : '';

            // Concatenating the first characters to create the desired string
            const resultString = firstInitial.toUpperCase() + lastInitial.toUpperCase();

            return resultString;
        }

        function capitalizeFirstLetter(str) {
            return str.charAt(0).toUpperCase() + str.slice(1);
        }

    </script>

    <script>

        // Create a mapping of states to cities
        const stateToCities = {
            gujarat: ['Ahmedabad', 'Gandhinagar', 'Anand', 'Vadodara', 'Surat', 'Rajkot', 'Gandhidham'],
            maharashtra: ['Mumbai', 'Pune', 'Nagpur'],
            rajasthan: ['Jaipur', 'Jodhpur', 'Udaipur'],
            madhyapradesh: ['Bhopal', 'Indore', 'Gwalior', 'Jabalpur', 'Ujjain']
        };

        // Function to update city dropdown based on selected state
        function updateCity() {
            const stateSelect = document.getElementById('state');
            const citySelect = document.getElementById('city');

            // Check if the state dropdown and city dropdown exist
            if (!stateSelect || !citySelect) {
                console.error('State or city select element not found.');
                return;
            }

            const selectedState = stateSelect.value; // Get the selected state
            console.log("Selected state:", selectedState);

            // Clear existing city options
            citySelect.innerHTML = '';

            // Get the cities for the selected state
            const cities = stateToCities[selectedState] || [];

            // Add the default 'Select a City' option
            const defaultOption = document.createElement('option');
            defaultOption.textContent = 'Select a City';
            defaultOption.value = ''; // Empty value for the default option
            citySelect.appendChild(defaultOption);

            // Populate the city dropdown with the corresponding city options
            cities.forEach(city => {
                const option = document.createElement('option');
                option.textContent = city;
                option.value = city.toLowerCase().replace(/\s+/g, '');
                citySelect.appendChild(option);
            });
        }

        // Attach the event listener to the state dropdown to call updateCity when the state changes
        document.addEventListener('DOMContentLoaded', () => {
            const stateSelect = document.getElementById('state');
            const petTypeSelect = document.getElementById('petType');
            if (stateSelect) {
                stateSelect.addEventListener('change', updateCity);
            } else {
                console.error('State select element not found.');
            }

        });

    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.3.0/flowbite.min.js"></script>
</body>

</html>